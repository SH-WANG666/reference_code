cas_server.settings:
  path: /admin/config/people/cas_server/settings
  defaults:
    _form: \Drupal\cas_server\Form\CasServerSettings
    _title: CAS Server settings
  requirements:
    _permission: administer site configuration

entity.cas_server_service.collection:
  path: /admin/config/people/cas_server/services
  defaults:
    _entity_list: cas_server_service
    _title: Service definitions
  requirements:
    _permission: administer site configuration

entity.cas_server_service.add_form:
  path: /admin/config/people/cas_server/services/add
  defaults:
    _entity_form: cas_server_service.add
    _title: Add Service definition
  requirements:
    _permission: administer site configuration

entity.cas_server_service.edit_form:
  path: /admin/config/people/cas_server/services/{cas_server_service}
  defaults:
    _entity_form: cas_server_service.edit
    _title: Edit Service definition
  requirements:
    _permission: administer site configuration

entity.cas_server_service.delete_form:
  path: /admin/config/people/cas_server/services/{cas_server_service}/delete
  defaults:
    _entity_form: cas_server_service.delete
    _title: Delete Service definition
  requirements:
    _permission: administer site configuration

cas_server.login:
  path: /cas/login
  defaults:
    _controller: \Drupal\cas_server\Controller\UserActionController::login
  requirements:
    # User is always allowed to return to the login page to re-authenticate
    # with a new service, or the existing one.
    _access: 'TRUE'

cas_server.logout:
  path: /cas/logout
  defaults:
    _controller: Drupal\cas_server\Controller\UserActionController::logout
  requirements:
    # User is always allowed to return to the logout page to terminate their
    # session. The server guards against double logout by checking session.
    _access: 'TRUE'

cas_server.validate1:
  path: /cas/validate
  defaults:
    _controller: Drupal\cas_server\Controller\TicketValidationController::validate
    validation_type: 0
  requirements:
    # CAS protocol ticket validation produces a protocol-specific response.
    _access: 'TRUE'

cas_server.validate2:
  path: /cas/serviceValidate
  defaults:
    _controller: Drupal\cas_server\Controller\TicketValidationController::validate
    validation_type: 1
  requirements:
    # CAS protocol ticket validation produces a protocol-specific response.
    _access: 'TRUE'

cas_server.proxy_validate2:
  path: /cas/proxyValidate
  defaults:
    _controller: Drupal\cas_server\Controller\TicketValidationController::validate
    validation_type: 2
  requirements:
    # CAS protocol ticket validation produces a protocol-specific response.
    _access: 'TRUE'

cas_server.validate3:
  path: /cas/p3/serviceValidate
  defaults:
    _controller: Drupal\cas_server\Controller\TicketValidationController::validate
    validation_type: 3
  requirements:
    # CAS protocol ticket validation produces a protocol-specific response.
    _access: 'TRUE'

cas_server.proxy_validate3:
  path: /cas/p3/proxyValidate
  defaults:
    _controller: Drupal\cas_server\Controller\TicketValidationController::validate
    validation_type: 4
  requirements:
    # CAS protocol ticket validation produces a protocol-specific response.
    _access: 'TRUE'

cas_server.proxy:
  path: /cas/proxy
  defaults:
    _controller: Drupal\cas_server\Controller\ProxyController::proxy
  requirements:
    # CAS proxy protocol ticket validation produces a protocol-specific response.
    _access: 'TRUE'
